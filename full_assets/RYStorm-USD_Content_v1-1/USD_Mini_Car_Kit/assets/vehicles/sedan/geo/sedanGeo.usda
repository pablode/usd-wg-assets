#usda 1.0
(
    customLayerData = {
        string creator = "USD for Autodesk 3ds Max: v0.2.0.41 Beta"
    }
    defaultPrim = "sedan"
    metersPerUnit = 0.0254
    upAxis = "Y"
)

def Mesh "sedan"
{
    float3[] extent = [(-2.8750005, 4.7683716e-7, -5.925), (2.875, 4.3500004, 5.925001)]
    int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
    int[] faceVertexIndices = [0, 40, 84, 146, 84, 40, 1, 84, 146, 1, 146, 2, 127, 2, 146, 157, 2, 127, 3, 2, 157, 4, 3, 157, 5, 3, 4, 155, 5, 4, 6, 5, 155, 7, 6, 155, 8, 6, 7, 108, 8, 7, 9, 8, 108, 125, 9, 108, 10, 9, 125, 11, 10, 125, 97, 11, 125, 12, 11, 97, 96, 12, 97, 13, 12, 96, 93, 13, 96, 14, 13, 93, 91, 14, 93, 15, 14, 91, 89, 15, 91, 16, 15, 89, 17, 15, 16, 18, 15, 17, 18, 17, 19, 156, 19, 17, 20, 19, 156, 21, 19, 20, 172, 21, 20, 22, 21, 172, 23, 22, 172, 24, 22, 23, 152, 24, 23, 25, 24, 152, 26, 25, 152, 27, 25, 26, 148, 27, 26, 28, 27, 148, 29, 28, 148, 163, 29, 148, 30, 29, 163, 31, 30, 163, 32, 30, 31, 112, 32, 31, 33, 32, 112, 34, 33, 112, 35, 33, 34, 39, 35, 34, 43, 35, 39, 42, 35, 43, 45, 42, 43, 36, 43, 37, 106, 37, 43, 151, 106, 43, 144, 106, 151, 38, 144, 151, 160, 38, 151, 39, 151, 43, 151, 147, 160, 147, 85, 160, 85, 0, 160, 0, 83, 160, 159, 160, 83, 90, 85, 147, 147, 16, 90, 89, 90, 16, 40, 0, 85, 38, 81, 144, 82, 144, 81, 44, 41, 45, 42, 45, 41, 36, 44, 43, 45, 43, 44, 46, 47, 115, 153, 115, 47, 48, 153, 47, 49, 48, 47, 50, 48, 49, 51, 50, 49, 52, 50, 51, 53, 52, 51, 54, 52, 53, 55, 54, 53, 145, 54, 55, 56, 145, 55, 57, 145, 56, 58, 145, 57, 59, 58, 57, 60, 58, 59, 61, 60, 59, 104, 60, 61, 62, 104, 61, 105, 104, 62, 63, 105, 62, 122, 105, 63, 64, 122, 63, 37, 122, 64, 36, 37, 64, 41, 36, 64, 44, 36, 41, 65, 66, 159, 110, 159, 66, 67, 110, 66, 68, 67, 66, 165, 67, 68, 69, 165, 68, 170, 165, 69, 70, 170, 69, 118, 170, 70, 71, 118, 70, 168, 118, 71, 72, 168, 71, 73, 168, 72, 74, 168, 73, 75, 74, 73, 128, 74, 75, 76, 128, 75, 77, 128, 76, 78, 77, 76, 150, 77, 78, 79, 150, 78, 149, 150, 79, 80, 149, 79, 81, 149, 80, 82, 81, 80, 115, 82, 80, 46, 115, 80, 193, 65, 83, 159, 83, 65, 0, 84, 83, 193, 83, 84, 90, 86, 85, 114, 86, 90, 158, 114, 90, 154, 158, 90, 87, 154, 90, 88, 87, 90, 124, 88, 90, 107, 124, 90, 95, 107, 90, 94, 95, 90, 92, 94, 90, 89, 91, 90, 92, 90, 91, 91, 93, 92, 94, 92, 93, 93, 96, 94, 95, 94, 96, 95, 96, 107, 97, 107, 96, 60, 98, 58, 99, 58, 98, 38, 160, 100, 164, 38, 100, 167, 38, 164, 166, 38, 167, 171, 38, 166, 119, 38, 171, 101, 38, 119, 129, 38, 101, 169, 38, 129, 102, 38, 169, 103, 38, 102, 48, 50, 139, 121, 139, 50, 131, 132, 20, 172, 20, 132, 104, 142, 60, 98, 60, 142, 123, 142, 105, 104, 105, 142, 106, 143, 37, 122, 37, 143, 107, 97, 124, 125, 124, 97, 88, 108, 87, 7, 87, 108, 109, 110, 160, 111, 160, 110, 112, 31, 113, 162, 113, 31, 86, 114, 127, 157, 127, 114, 77, 169, 128, 129, 128, 169, 115, 153, 144, 116, 144, 153, 117, 163, 136, 148, 136, 163, 168, 119, 118, 171, 118, 119, 52, 120, 50, 121, 50, 120, 143, 123, 122, 105, 122, 123, 134, 152, 133, 23, 133, 152, 124, 125, 88, 108, 88, 125, 126, 86, 40, 127, 40, 86, 128, 129, 74, 101, 74, 129, 54, 140, 52, 120, 52, 140, 151, 130, 147, 131, 130, 151, 132, 131, 151, 133, 132, 151, 134, 133, 151, 135, 134, 151, 136, 135, 151, 117, 136, 151, 162, 117, 151, 113, 162, 151, 137, 113, 151, 38, 103, 81, 149, 81, 103, 106, 144, 138, 139, 106, 138, 121, 106, 139, 120, 106, 121, 140, 106, 120, 141, 106, 140, 99, 106, 141, 98, 106, 99, 142, 106, 98, 123, 106, 142, 143, 106, 123, 145, 141, 54, 140, 54, 141, 146, 40, 85, 17, 16, 147, 136, 148, 135, 26, 135, 148, 58, 99, 145, 141, 145, 99, 103, 102, 149, 150, 149, 102, 39, 34, 151, 137, 151, 34, 135, 26, 134, 152, 134, 26, 153, 48, 116, 139, 116, 48, 154, 155, 158, 4, 158, 155, 34, 112, 137, 113, 137, 112, 130, 131, 156, 20, 156, 131, 87, 7, 154, 155, 154, 7, 114, 158, 157, 4, 157, 158, 161, 130, 16, 156, 16, 130, 162, 31, 117, 163, 117, 31, 110, 67, 100, 164, 100, 67, 67, 165, 164, 167, 164, 165, 170, 166, 165, 167, 165, 166, 74, 101, 168, 119, 168, 101, 102, 169, 150, 77, 150, 169, 118, 171, 170, 166, 170, 171, 133, 23, 132, 172, 132, 23, 185, 174, 173, 178, 173, 174, 84, 1, 214, 175, 214, 1, 2, 175, 1, 3, 175, 2, 5, 175, 3, 212, 175, 5, 6, 212, 5, 8, 212, 6, 9, 212, 8, 10, 212, 9, 11, 212, 10, 12, 212, 11, 13, 212, 12, 14, 212, 13, 208, 212, 14, 15, 208, 14, 209, 208, 15, 18, 209, 15, 205, 209, 18, 176, 205, 18, 177, 176, 18, 18, 211, 177, 211, 178, 177, 174, 177, 178, 19, 211, 18, 21, 211, 19, 180, 211, 21, 22, 180, 21, 24, 180, 22, 25, 180, 24, 27, 180, 25, 28, 180, 27, 215, 180, 28, 29, 215, 28, 30, 215, 29, 32, 215, 30, 33, 215, 32, 35, 215, 33, 42, 215, 35, 210, 180, 179, 181, 179, 180, 182, 181, 180, 215, 182, 180, 216, 183, 203, 183, 46, 203, 46, 183, 188, 183, 184, 188, 188, 184, 173, 185, 173, 184, 47, 46, 188, 49, 47, 188, 210, 49, 188, 51, 49, 210, 53, 51, 210, 55, 53, 210, 56, 55, 210, 57, 56, 210, 179, 57, 210, 59, 57, 179, 61, 59, 179, 62, 61, 179, 63, 62, 179, 64, 63, 179, 41, 64, 179, 193, 194, 65, 213, 65, 194, 66, 65, 213, 68, 66, 213, 69, 68, 213, 201, 69, 213, 70, 69, 201, 71, 70, 201, 72, 71, 201, 73, 72, 201, 75, 73, 201, 76, 75, 201, 78, 76, 201, 79, 78, 201, 187, 79, 201, 80, 79, 187, 203, 80, 187, 46, 80, 203, 173, 178, 188, 211, 188, 178, 213, 189, 201, 212, 201, 189, 190, 212, 189, 175, 212, 190, 191, 190, 192, 189, 192, 190, 84, 214, 193, 194, 193, 214, 195, 181, 196, 182, 196, 181, 197, 42, 186, 41, 186, 42, 200, 198, 202, 199, 202, 198, 200, 201, 198, 216, 198, 201, 199, 203, 202, 187, 202, 203, 187, 201, 202, 200, 202, 201, 206, 207, 217, 204, 217, 207, 212, 206, 205, 217, 205, 206, 207, 206, 208, 212, 208, 206, 209, 204, 208, 207, 208, 204, 188, 211, 210, 180, 210, 211, 201, 185, 216, 183, 216, 185, 184, 183, 185, 201, 212, 185, 174, 185, 212, 212, 205, 174, 176, 174, 205, 177, 174, 176, 192, 189, 194, 213, 194, 189, 214, 175, 191, 190, 191, 175, 196, 182, 197, 215, 197, 182, 186, 179, 195, 181, 195, 179, 199, 198, 203, 216, 203, 198, 209, 205, 204, 217, 204, 205]
    point3f[] points = [(-2.275, 4.7683716e-7, -5.925), (-2.275, 1.3000004, -4.775), (-2.275, 1.5178305, -4.578945), (-2.275, 1.7033814, -4.3521013), (-2.275, 1.0701184, -4.3106604), (-2.275, 1.8523564, -4.0997243), (-2.275, 1.9613025, -3.8276613), (-2.275, 1.4583466, -3.638228), (-2.275, 2.0276964, -3.5422163), (-2.275, 2.0500004, -3.2500002), (-2.275, 2.0276964, -2.9577842), (-2.275, 1.9613025, -2.6723392), (-2.275, 1.8523564, -2.4002762), (-2.275, 1.7033814, -2.1478992), (-2.275, 1.5178305, -1.9210563), (-2.275, 1.3000004, -1.7250004), (-2.275, 0.029056557, 1.924026), (-2.275, 0.032969937, 1.923511), (-2.275, 1.3000004, 1.875), (-2.275, 1.5178305, 2.071056), (-2.275, 0.77121395, 2.1213236), (-2.275, 1.7033814, 2.2978992), (-2.275, 1.8523564, 2.5502748), (-2.275, 1.3116465, 2.6617556), (-2.275, 1.9613025, 2.822338), (-2.275, 2.0276964, 3.1077843), (-2.275, 1.5094584, 3.3999996), (-2.275, 2.0500004, 3.3999996), (-2.275, 2.0276964, 3.692215), (-2.275, 1.9613025, 3.9776602), (-2.275, 1.8523564, 4.2497196), (-2.275, 1.0770044, 4.44403), (-2.275, 1.7033814, 4.5021), (-2.275, 1.5178305, 4.72894), (-2.275, 0.41511318, 4.8261805), (-2.275, 1.3000004, 4.925), (2.275, 0.039957877, 5.3764505), (2.275, 0.03818778, 4.8758), (1.475, 0.014759137, -1.7506981), (-2.275, 0.03818778, 4.8758), (-2.275, 0.005482505, -4.7494764), (2.275, 1.3000004, 5.925), (-2.275, 1.3000004, 5.925), (-2.275, 0.039957877, 5.3764505), (2.275, 0.65000045, 5.925001), (-2.275, 0.65000045, 5.925001), (2.275, 1.3000004, 1.875), (2.275, 1.5178305, 2.071056), (2.275, 0.77121395, 2.1213236), (2.275, 1.7033814, 2.2978992), (2.275, 1.0770044, 2.3559656), (2.275, 1.8523564, 2.5502748), (2.275, 1.3116465, 2.6617556), (2.275, 1.9613025, 2.822338), (2.275, 1.4591486, 3.0178556), (2.275, 2.0276964, 3.1077843), (2.275, 2.0500004, 3.3999996), (2.275, 2.0276964, 3.692215), (2.275, 1.4591486, 3.7821436), (2.275, 1.9613025, 3.9776602), (2.275, 1.3116465, 4.13824), (2.275, 1.8523564, 4.2497196), (2.275, 1.7033814, 4.5021), (2.275, 1.5178305, 4.72894), (2.275, 1.3000004, 4.925), (2.275, 1.3000004, -4.775), (2.275, 1.5178305, -4.578945), (2.275, 0.75945824, -4.549038), (2.275, 1.7033814, -4.3521013), (2.275, 1.8523564, -4.0997243), (2.275, 1.9613025, -3.8276613), (2.275, 2.0276964, -3.5422163), (2.275, 2.0500004, -3.2500002), (2.275, 2.0276964, -2.9577842), (2.275, 1.4583466, -2.861772), (2.275, 1.9613025, -2.6723392), (2.275, 1.8523564, -2.4002762), (2.275, 1.0701184, -2.18934), (2.275, 1.7033814, -2.1478992), (2.275, 1.5178305, -1.9210563), (2.275, 1.3000004, -1.7250004), (2.275, 0.014759137, -1.7506981), (2.275, 0.030361017, 1.9238548), (2.275, 4.7683716e-7, -5.925), (-2.275, 1.3000004, -5.925), (-1.4749999, 0.006807738, -4.749651), (-1.4749999, 0.3976868, -4.698889), (-1.4749999, 1.4583466, -3.638228), (-1.4749999, 1.5094584, -3.2500002), (-2.275, 0.014759137, -1.7506981), (-1.4749999, 0.014759137, -1.7506981), (-2.275, 0.3976868, -1.8011122), (-1.4749999, 0.3976868, -1.8011122), (-2.275, 0.75945824, -1.9509623), (-1.4749999, 0.75945824, -1.9509623), (-1.4749999, 1.0701184, -2.18934), (-2.275, 1.0701184, -2.18934), (-2.275, 1.3084965, -2.5000002), (1.475, 1.3116465, 4.13824), (1.475, 1.4591486, 3.7821436), (1.4750001, 0.39768678, -4.6988893), (1.475, 1.4583466, -2.861772), (1.475, 0.75945824, -1.9509623), (1.475, 0.3976868, -1.8011122), (2.275, 1.0770044, 4.44403), (2.275, 0.77121395, 4.6786795), (1.475, 0.03818778, 4.8758), (-1.4749999, 1.3084965, -2.5000002), (-2.275, 1.5094584, -3.2500002), (2.275, 0.009458204, -4.75), (2.275, 0.3976868, -4.698889), (1.4750001, 0.39768678, -4.6988893), (-2.275, 0.77121395, 4.6786795), (-1.4749999, 0.77121395, 4.6786795), (-1.4749999, 0.75945824, -4.549038), (2.275, 0.032969937, 1.923511), (1.4750001, 0.41511318, 1.9738216), (-1.4749999, 1.3116465, 4.13824), (2.275, 1.4583466, -3.638228), (1.475, 1.5094584, -3.2500002), (1.475, 1.3116465, 2.6617556), (1.475, 1.0770044, 2.3559656), (2.275, 0.41511318, 4.8261805), (1.475, 0.77121395, 4.6786795), (-1.4749999, 1.4583466, -2.861772), (-2.275, 1.4583466, -2.861772), (-1.4749999, 0.009458204, -4.75), (-2.275, 0.3976868, -4.698889), (2.275, 1.3084965, -2.5000002), (1.475, 1.3084965, -2.5000002), (-1.4749999, 0.41511318, 1.9738216), (-1.4749999, 0.77121395, 2.1213236), (-1.4749999, 1.0770044, 2.3559656), (-1.4749999, 1.3116465, 2.6617556), (-1.4749999, 1.4591486, 3.0178556), (-1.4749999, 1.5094584, 3.3999996), (-1.4749999, 1.4591486, 3.7821436), (-1.4749999, 0.41511318, 4.8261805), (1.4750001, 0.41511318, 1.9738216), (1.475, 0.77121395, 2.1213236), (1.475, 1.4591486, 3.0178556), (1.475, 1.5094584, 3.3999996), (1.475, 1.0770044, 4.44403), (1.475, 0.41511318, 4.8261805), (1.4750001, 0.031013247, 1.9237685), (2.275, 1.5094584, 3.3999996), (-2.275, 0.009458204, -4.75), (-1.4749999, 0.030361017, 1.9238548), (-2.275, 1.4591486, 3.7821436), (2.275, 0.3976868, -1.8011122), (2.275, 0.75945824, -1.9509623), (-1.4749999, 0.03818778, 4.8758), (-2.275, 1.4591486, 3.0178556), (2.275, 0.41511318, 1.9738216), (-1.4749999, 1.3084965, -4), (-2.275, 1.3084965, -4), (-2.275, 0.41511318, 1.9738216), (-2.275, 0.75945824, -4.549038), (-1.4749999, 1.0701184, -4.3106604), (2.275, 0.006807738, -4.749651), (1.4750001, 0.0074703544, -4.7497387), (-1.4749999, 0.032969937, 1.923511), (-1.4749999, 1.0770044, 4.44403), (-2.275, 1.3116465, 4.13824), (1.475, 0.75945824, -4.549038), (2.275, 1.0701184, -4.3106604), (1.475, 1.3084965, -4), (1.475, 1.0701184, -4.3106604), (2.275, 1.5094584, -3.2500002), (1.475, 1.0701184, -2.18934), (2.275, 1.3084965, -4), (1.475, 1.4583466, -3.638228), (-2.275, 1.0770044, 2.3559656), (2.275, 4.3500004, -0.075000286), (-2.275, 4.0506806, -0.5132904), (-2.275, 2.4000006, -5.4750004), (-2.275, 2.9500005, 1.125), (-2.275, 4.0506806, 1.125), (-2.275, 4.3500004, -0.075000286), (2.275, 2.4951458, 5.925001), (-2.275, 2.9500008, 3.6750002), (1.2750001, 2.4951456, 5.925), (-1.2749999, 2.4951456, 5.925), (2.275, 2.9500005, 1.125), (2.275, 4.0506806, 1.125), (2.275, 4.0506806, -0.5132904), (2.275, 2.0500004, 5.925), (2.275, 2.3500004, -1.870553), (2.275, 4.3500004, 2.2249994), (1.2750001, 2.4000006, -5.4750004), (-1.2749999, 2.4000006, -5.4750004), (-1.2749999, 2.0000005, -5.7000003), (1.2750001, 2.0000005, -5.7000003), (2.275, 1.3000004, -5.925), (2.275, 2.0000005, -5.7000003), (1.2750001, 2.0500004, 5.925), (-1.2749999, 2.0500004, 5.925), (-2.275, 2.0500004, 5.925), (2.875, 2.9500008, -1.5705528), (2.875, 2.3500004, -1.5705528), (2.875, 2.9500008, -2.1250002), (2.275, 2.9500008, -2.1250002), (2.875, 2.3500004, -1.870553), (2.275, 2.3500004, -1.5705528), (-2.8750005, 2.3500004, -1.5705528), (-2.275, 2.9500008, -1.5705528), (-2.8750005, 2.9500008, -2.1250002), (-2.8750005, 2.3500004, -1.870553), (-2.275, 2.3500004, -1.870553), (-2.275, 2.3500004, -1.5705528), (2.275, 2.9500008, 3.6750002), (-2.275, 4.3500004, 2.2249994), (-2.275, 2.9500008, -2.1250002), (2.275, 2.4000006, -5.4750004), (-2.275, 2.0000005, -5.7000003), (-2.275, 2.4951458, 5.925001), (2.275, 2.9500008, -1.5705528), (-2.8750005, 2.9500008, -1.5705528)]
    color3f[] primvars:displayColor = [(0.8, 0.8, 0.8)]
    texCoord2f[] primvars:map1 = [(1.039065e-30, 1.052416e-28), (1.039065e-30, 5.11811), (4.628732, 0.01636534), (4.625984, 0.03723514), (4.527559, 5.11811), (5.29943, 5.975708), (4.827209, 1.565694), (5.417173, 2.989991), (6.192516, 6.706225), (6.355669, 4.213063), (7.186125, 7.29274), (7.57874, 5.151558), (8.257238, 7.721663), (9.003037, 5.741521), (9.381041, 7.983057), (10.5315, 5.942747), (10.5315, 8.070867), (12.05995, 5.741521), (11.68195, 7.983057), (12.80575, 7.721663), (13.48425, 5.151558), (13.87687, 7.29274), (14.70732, 4.213063), (14.87048, 6.706225), (15.64582, 2.989991), (15.76356, 5.975708), (16.23578, 1.565694), (16.53543, 5.11811), (16.43426, 0.05810495), (30.90236, 0.1092583), (30.89965, 0.129801), (30.70866, 5.11811), (31.48053, 5.975708), (31.09772, 1.634302), (31.67844, 3.036274), (32.37362, 6.706225), (32.60223, 4.240174), (33.36723, 7.29274), (33.80613, 5.16396), (34.43834, 7.721663), (35.2081, 5.744676), (35.56214, 7.983057), (36.7126, 5.942747), (36.7126, 8.070867), (38.2171, 5.744676), (37.86305, 7.983057), (38.98685, 7.721663), (39.61907, 5.16396), (40.05797, 7.29274), (40.82297, 4.240174), (41.05158, 6.706225), (41.74676, 3.036274), (41.94466, 5.975708), (42.32747, 1.634302), (42.71653, 5.11811), (42.52284, 0.1503437), (44.49391, 0.1573126), (46.65354, 5.11811), (46.65354, 2.559055), (1.067909e-15, 44.49419), (1.020601e-15, 42.52311), (-17.91339, 44.49419), (-3.149606, 42.52311), (-14.76378, 42.52311), (-3.149606, 30.90255), (-3.149606, 16.43436), (-3.149606, 4.628761), (-17.91339, 42.52311), (-14.76378, 30.90255), (-14.76378, 4.628761), (-17.91339, 4.29941e-16), (0, 0), (1.110953e-16, 4.628761), (-14.76378, 16.43436), (-17.91339, 30.90255), (-17.91339, 16.43436), (-17.91339, 4.628761), (3.944428e-16, 16.43436), (7.416952e-16, 30.90255), (0, 2.559055), (-17.91339, 2.559055), (0, 5.11811), (-17.91339, 5.11811), (-2.214771e-16, 29.8671), (-17.91339, 29.8671), (-2.322271e-16, 33.09702), (-17.91339, 33.09702), (-30.70866, 5.11811), (-30.89965, 0.129801), (-31.48053, 5.975708), (-31.09772, 1.634302), (-31.67844, 3.036274), (-32.37362, 6.706225), (-32.60223, 4.240174), (-33.36723, 7.29274), (-33.80613, 5.16396), (-34.43834, 7.721663), (-35.2081, 5.744676), (-35.56214, 7.983057), (-36.7126, 5.942747), (-36.7126, 8.070867), (-37.86305, 7.983057), (-38.2171, 5.744676), (-38.98685, 7.721663), (-39.61907, 5.16396), (-40.05797, 7.29274), (-40.82297, 4.240174), (-41.05158, 6.706225), (-41.74676, 3.036274), (-41.94466, 5.975708), (-42.32747, 1.634302), (-42.71653, 5.11811), (-42.52284, 0.1503437), (-44.49391, 0.1573126), (-46.65354, 5.11811), (-46.65354, 2.559055), (-4.527559, 5.11811), (-5.29943, 5.975708), (-4.827209, 1.565694), (-5.417173, 2.989991), (-6.192516, 6.706225), (-6.355669, 4.213063), (-7.186125, 7.29274), (-7.57874, 5.151558), (-8.257238, 7.721663), (-9.003037, 5.741521), (-9.381041, 7.983057), (-10.5315, 5.942747), (-10.5315, 8.070867), (-11.68195, 7.983057), (-12.05995, 5.741521), (-12.80575, 7.721663), (-13.48425, 5.151558), (-13.87687, 7.29274), (-14.70732, 4.213063), (-14.87048, 6.706225), (-15.64582, 2.989991), (-15.76356, 5.975708), (-16.23578, 1.565694), (-16.53543, 5.11811), (-16.43426, 0.05810495), (-30.90236, 0.1092583), (0, 5.11811), (0, 0), (-4.6273584, 0.026800241), (17.91339, 0), (0, 0), (17.91339, 5.11811), (0, 5.11811), (4.6273584, 0.026800241), (4.827209, 1.565694), (16.43426, 0.05810495), (5.417173, 2.989991), (6.355669, 4.213063), (7.57874, 5.151558), (9.003037, 5.741521), (10.5315, 5.942747), (12.05995, 5.741521), (13.48425, 5.151558), (14.70732, 4.213063), (15.64582, 2.989991), (16.23578, 1.565694), (17.91339, -2.087494), (14.76378, -2.087494), (17.91339, -0.5668955), (14.76378, -0.5668955), (17.91339, -4.766652), (14.76378, -4.766652), (17.91339, -3.225004), (14.76378, -3.225004), (17.91339, -7.152452), (14.76378, -7.152452), (17.91339, -5.610804), (14.76378, -5.610804), (14.76378, -9.103354), (14.76378, -7.561706), (17.91339, -9.103354), (17.91339, -7.561706), (0, -34.62709), (0, -33.1096), (3.149606, -34.62709), (3.149606, -33.1096), (-4.6273584, 0.026800241), (-4.827209, 1.565694), (-16.43426, 0.05810495), (-5.417173, 2.989991), (-6.355669, 4.213063), (-7.57874, 5.151558), (-9.003037, 5.741521), (-10.5315, 5.942747), (-12.05995, 5.741521), (-13.48425, 5.151558), (-14.70732, 4.213063), (-15.64582, 2.989991), (-16.23578, 1.565694), (0, 21.69345), (-3.149606, 21.69345), (0, 23.21093), (-3.149606, 23.21093), (-14.76378, 21.69345), (-17.91339, 21.69345), (-14.76378, 23.21093), (-17.91339, 23.21093), (0, -29.80579), (0, -28.2883), (3.149606, -29.80579), (3.149606, -28.2883), (3.149606, -23.00498), (0, -23.00498), (3.149606, -21.48749), (0, -21.48749), (3.149606, -5.401287), (0, -5.401287), (3.149606, -3.904523), (0, -3.904523), (14.76378, -10.48641), (14.76378, -8.94476), (17.91339, -10.48641), (17.91339, -8.94476), (-14.76378, 11.21708), (-14.76378, 9.675434), (-17.91339, 11.21708), (-17.91339, 9.675434), (0, 0.6407287), (-3.149606, 0.6407287), (0, 2.182377), (-3.149606, 2.182377), (17.91339, -23.00498), (14.76378, -23.00498), (17.91339, -21.48749), (14.76378, -21.48749), (-14.76378, 3.293806), (-17.91339, 3.293806), (-14.76378, 4.835454), (-17.91339, 4.835454), (0, -9.103354), (0, -7.561706), (3.149606, -9.103354), (3.149606, -7.561706), (0, 4.161904), (-3.149606, 4.161904), (0, 5.679388), (-3.149606, 5.679388), (14.76378, -34.62709), (14.76378, -33.1096), (17.91339, -34.62709), (17.91339, -33.1096), (0, 11.21708), (0, 9.675434), (-3.149606, 11.21708), (-3.149606, 9.675434), (0, 29.96382), (0, 28.44634), (-3.149606, 29.96382), (-3.149606, 28.44634), (3.149606, -14.68812), (0, -14.68812), (3.149606, -13.17064), (0, -13.17064), (-14.76378, 34.72643), (-14.76378, 33.20895), (-17.91339, 34.72643), (-17.91339, 33.20895), (14.76378, -11.20736), (14.76378, -9.665713), (17.91339, -11.20736), (17.91339, -9.665713), (-14.76378, 0.6407287), (-17.91339, 0.6407287), (-14.76378, 2.182377), (-17.91339, 2.182377), (0, -10.48641), (0, -8.94476), (3.149606, -10.48641), (3.149606, -8.94476), (0, 34.72643), (0, 33.20895), (-3.149606, 34.72643), (-3.149606, 33.20895), (31.09772, 1.634302), (30.901005, 0.11952965), (42.52284, 0.1503437), (31.67844, 3.036274), (32.60223, 4.240174), (33.80613, 5.16396), (35.2081, 5.744676), (36.7126, 5.942747), (38.2171, 5.744676), (39.61907, 5.16396), (40.82297, 4.240174), (41.74676, 3.036274), (42.32747, 1.634302), (3.149606, -2.087494), (0, -2.087494), (3.149606, -0.5668955), (0, -0.5668955), (-30.901005, 0.11952965), (-31.09772, 1.634302), (-42.52284, 0.1503437), (-31.67844, 3.036274), (-32.60223, 4.240174), (-33.80613, 5.16396), (-35.2081, 5.744676), (-36.7126, 5.942747), (-38.2171, 5.744676), (-39.61907, 5.16396), (-40.82297, 4.240174), (-41.74676, 3.036274), (-42.32747, 1.634302), (0, 37.1742), (0, 35.65672), (-3.149606, 37.1742), (-3.149606, 35.65672), (-17.91339, -0.5879454), (-14.76378, -0.5774205), (-17.91339, -0.5668955), (-14.76378, -3.914883), (-17.91339, -3.925243), (-17.91339, -3.904523), (14.76378, -37.14032), (14.76378, -35.62283), (17.91339, -37.14032), (17.91339, -35.62283), (0, -37.14032), (0, -35.62283), (3.149606, -37.14032), (3.149606, -35.62283), (3.149606, -4.766652), (0, -4.766652), (3.149606, -3.225004), (0, -3.225004), (17.91339, -5.401287), (14.76378, -5.401287), (17.91339, -3.904523), (14.76378, -3.904523), (-14.76378, 37.1742), (-14.76378, 35.65672), (-17.91339, 37.1742), (-17.91339, 35.65672), (0, 13.41048), (-3.149606, 13.41048), (0, 14.92797), (-3.149606, 14.92797), (-14.76378, 9.148689), (-14.76378, 7.607041), (-17.91339, 9.148689), (-17.91339, 7.607041), (17.91339, -14.68812), (14.76378, -14.68812), (17.91339, -13.17064), (14.76378, -13.17064), (-14.76378, 13.41048), (-17.91339, 13.41048), (-14.76378, 14.92797), (-17.91339, 14.92797), (-14.76378, 10.51491), (-14.76378, 8.973259), (-17.91339, 10.51491), (-17.91339, 8.973259), (-14.76378, 5.669885), (-17.91339, 5.669885), (-14.76378, 7.211533), (-17.91339, 7.211533), (-14.76378, 4.161904), (-17.91339, 4.161904), (-14.76378, 5.679388), (-17.91339, 5.679388), (14.76378, -29.80579), (14.76378, -28.2883), (17.91339, -29.80579), (17.91339, -28.2883), (0, 3.293806), (-3.149606, 3.293806), (0, 4.835454), (-3.149606, 4.835454), (0, 5.669885), (-3.149606, 5.669885), (0, 7.211533), (-3.149606, 7.211533), (0, 9.148689), (0, 7.607041), (-3.149606, 9.148689), (-3.149606, 7.607041), (0, -11.20736), (0, -9.665713), (3.149606, -11.20736), (3.149606, -9.665713), (3.149606, -7.152452), (0, -7.152452), (3.149606, -5.610804), (0, -5.610804), (0, 10.51491), (0, 8.973259), (-3.149606, 10.51491), (-3.149606, 8.973259), (-14.76378, 29.96382), (-14.76378, 28.44634), (-17.91339, 29.96382), (-17.91339, 28.44634), (6.21733e-15, 26.58828), (6.720868e-15, 28.67783), (17.91339, 26.58828), (17.91339, 28.67783), (0.8858268, 7.874016), (1.771654, 9.448819), (14.96063, 11.61417), (15.96239, 9.251968), (17.14349, 9.251968), (17.14349, 11.61417), (27.75591, 11.61417), (27.75591, 15.94756), (32.08661, 17.12598), (23.0315, 17.12598), (21.30594, 15.94756), (37.79528, 11.61417), (46.65354, 9.823406), (8.944815e-16, -34.74453), (1.104126e-15, -43.78199), (-17.91339, -34.74453), (-3.937008, -43.78199), (-13.97638, -43.78199), (-17.91339, -43.78199), (-17.14349, 11.61417), (-17.14349, 9.251968), (-27.75591, 11.61417), (-32.08661, 17.12598), (-27.75591, 15.94756), (-23.0315, 17.12598), (-21.30594, 15.94756), (-37.79528, 11.61417), (-46.65354, 9.823406), (-0.8858268, 7.874016), (-1.771654, 9.448819), (-14.96063, 11.61417), (-15.96239, 9.251968), (0, 23.0315), (0, 32.08661), (17.91339, 23.0315), (17.91339, 32.08661), (-3.46909e-29, 3.279053), (-2.929454e-28, 16.6446), (3.937008, 3.279053), (17.91339, 16.6446), (13.97638, 3.279053), (17.91339, 3.279053), (13.97638, 7.297086), (3.937008, 7.297086), (13.97638, 9.103932), (3.937008, 9.103932), (17.91339, 4.872587), (-7.70372e-34, 4.872587), (17.91339, 7.767359), (2.119058e-18, 7.767359), (-3.937008, 8.070867), (-13.97638, 8.070867), (-3.937008, 9.823406), (-13.97638, 9.823406), (-17.91339, 8.070867), (0, 8.070867), (-14.96063, 11.61417), (-15.96239, 9.251968), (-17.14349, 11.61417), (-17.14349, 9.251968), (-2.362205, 14.96063), (-2.362205, 17.14349), (0, 14.96063), (0, 17.14349), (2.362205, 17.14349), (2.362205, 15.96239), (0, 17.14349), (0, 15.96239), (0, 2.285616), (-2.362205, 2.285616), (0, 4.851457), (-2.362205, 4.851457), (14.96063, 11.61417), (17.14349, 11.61417), (15.96239, 9.251968), (17.14349, 9.251968), (17.91339, 14.96063), (17.91339, 17.14349), (20.27559, 14.96063), (20.27559, 17.14349), (20.27559, 2.285616), (17.91339, 2.285616), (20.27559, 4.851457), (17.91339, 4.851457), (-17.91339, 17.14349), (-17.91339, 15.96239), (-20.27559, 17.14349), (-20.27559, 15.96239), (-1.009669e-29, -11.18754), (-1.189303e-29, -19.12284), (-17.91339, -11.18754), (-17.91339, -19.12284), (4.365692e-15, 18.90445), (17.91339, 18.90445), (0, 7.297086), (0, 9.103932), (17.91339, 7.297086), (17.91339, 9.103932), (-17.91339, 9.823406), (0, 9.823406), (2.362205, 9.251968), (0, 9.251968), (2.362205, 11.61417), (0, 11.61417), (-17.91339, 9.251968), (-20.27559, 9.251968), (-17.91339, 11.61417), (-20.27559, 11.61417)] (
        interpolation = "faceVarying"
    )
    int[] primvars:map1:indices = [0, 2, 1, 3, 1, 2, 4, 1, 3, 4, 3, 5, 6, 5, 3, 7, 5, 6, 8, 5, 7, 9, 8, 7, 10, 8, 9, 11, 10, 9, 12, 10, 11, 13, 12, 11, 14, 12, 13, 15, 14, 13, 16, 14, 15, 17, 16, 15, 18, 16, 17, 19, 18, 17, 20, 19, 17, 21, 19, 20, 22, 21, 20, 23, 21, 22, 24, 23, 22, 25, 23, 24, 26, 25, 24, 27, 25, 26, 28, 27, 26, 29, 27, 28, 30, 27, 29, 31, 27, 30, 31, 30, 32, 33, 32, 30, 34, 32, 33, 35, 32, 34, 36, 35, 34, 37, 35, 36, 38, 37, 36, 39, 37, 38, 40, 39, 38, 41, 39, 40, 42, 41, 40, 43, 41, 42, 44, 43, 42, 45, 43, 44, 46, 45, 44, 47, 46, 44, 48, 46, 47, 49, 48, 47, 50, 48, 49, 51, 50, 49, 52, 50, 51, 53, 52, 51, 54, 52, 53, 55, 54, 53, 56, 54, 55, 57, 54, 56, 58, 57, 56, 59, 61, 60, 62, 60, 61, 63, 62, 61, 64, 62, 63, 65, 64, 63, 66, 65, 63, 67, 63, 61, 63, 68, 66, 68, 69, 66, 69, 70, 66, 70, 71, 66, 72, 66, 71, 73, 69, 68, 68, 74, 73, 75, 73, 74, 76, 70, 69, 65, 77, 64, 78, 64, 77, 79, 81, 80, 82, 80, 81, 83, 85, 84, 86, 84, 85, 87, 89, 88, 90, 88, 89, 91, 90, 89, 92, 91, 89, 93, 91, 92, 94, 93, 92, 95, 93, 94, 96, 95, 94, 97, 95, 96, 98, 97, 96, 99, 97, 98, 100, 99, 98, 101, 99, 100, 102, 99, 101, 103, 102, 101, 104, 102, 103, 105, 104, 103, 106, 104, 105, 107, 106, 105, 108, 106, 107, 109, 108, 107, 110, 108, 109, 111, 110, 109, 112, 110, 111, 113, 112, 111, 114, 113, 111, 115, 113, 114, 116, 117, 144, 118, 144, 117, 119, 118, 117, 120, 119, 117, 121, 119, 120, 122, 121, 120, 123, 121, 122, 124, 123, 122, 125, 123, 124, 126, 125, 124, 127, 125, 126, 128, 127, 126, 129, 127, 128, 130, 127, 129, 131, 130, 129, 132, 130, 131, 133, 132, 131, 134, 132, 133, 135, 134, 133, 136, 134, 135, 137, 136, 135, 138, 136, 137, 139, 138, 137, 140, 138, 139, 141, 140, 139, 88, 141, 139, 87, 88, 139, 142, 116, 143, 144, 143, 116, 145, 147, 146, 148, 146, 147, 151, 150, 149, 152, 150, 151, 153, 152, 151, 154, 153, 151, 155, 154, 151, 156, 155, 151, 157, 156, 151, 158, 157, 151, 159, 158, 151, 160, 159, 151, 161, 160, 151, 162, 164, 163, 165, 163, 164, 166, 168, 167, 169, 167, 168, 170, 172, 171, 173, 171, 172, 174, 176, 175, 177, 175, 176, 178, 180, 179, 181, 179, 180, 184, 182, 183, 185, 184, 183, 186, 184, 185, 187, 184, 186, 188, 184, 187, 189, 184, 188, 190, 184, 189, 191, 184, 190, 192, 184, 191, 193, 184, 192, 194, 184, 193, 195, 197, 196, 198, 196, 197, 199, 201, 200, 202, 200, 201, 203, 205, 204, 206, 204, 205, 207, 209, 208, 210, 208, 209, 211, 213, 212, 214, 212, 213, 215, 217, 216, 218, 216, 217, 219, 221, 220, 222, 220, 221, 223, 225, 224, 226, 224, 225, 227, 229, 228, 230, 228, 229, 231, 233, 232, 234, 232, 233, 235, 237, 236, 238, 236, 237, 239, 241, 240, 242, 240, 241, 243, 245, 244, 246, 244, 245, 247, 249, 248, 250, 248, 249, 251, 253, 252, 254, 252, 253, 255, 257, 256, 258, 256, 257, 259, 261, 260, 262, 260, 261, 263, 265, 264, 266, 264, 265, 267, 269, 268, 270, 268, 269, 271, 273, 272, 274, 272, 273, 275, 277, 276, 278, 276, 277, 281, 279, 280, 282, 279, 281, 283, 282, 281, 284, 283, 281, 285, 284, 281, 286, 285, 281, 287, 286, 281, 288, 287, 281, 289, 288, 281, 290, 289, 281, 291, 290, 281, 292, 294, 293, 295, 293, 294, 298, 296, 297, 299, 298, 297, 300, 298, 299, 301, 298, 300, 302, 298, 301, 303, 298, 302, 304, 298, 303, 305, 298, 304, 306, 298, 305, 307, 298, 306, 308, 298, 307, 309, 311, 310, 312, 310, 311, 315, 313, 314, 318, 317, 316, 319, 321, 320, 322, 320, 321, 323, 325, 324, 326, 324, 325, 327, 329, 328, 330, 328, 329, 331, 333, 332, 334, 332, 333, 335, 337, 336, 338, 336, 337, 339, 341, 340, 342, 340, 341, 343, 345, 344, 346, 344, 345, 347, 349, 348, 350, 348, 349, 351, 353, 352, 354, 352, 353, 355, 357, 356, 358, 356, 357, 359, 361, 360, 362, 360, 361, 363, 365, 364, 366, 364, 365, 367, 369, 368, 370, 368, 369, 371, 373, 372, 374, 372, 373, 375, 377, 376, 378, 376, 377, 379, 381, 380, 382, 380, 381, 383, 385, 384, 386, 384, 385, 387, 389, 388, 390, 388, 389, 391, 393, 392, 394, 392, 393, 395, 397, 396, 398, 396, 397, 399, 401, 400, 402, 400, 401, 1, 4, 403, 404, 403, 4, 5, 404, 4, 8, 404, 5, 10, 404, 8, 405, 404, 10, 12, 405, 10, 14, 405, 12, 16, 405, 14, 18, 405, 16, 19, 405, 18, 21, 405, 19, 23, 405, 21, 25, 405, 23, 406, 405, 25, 27, 406, 25, 407, 406, 27, 31, 407, 27, 408, 407, 31, 409, 408, 31, 410, 409, 31, 31, 411, 410, 411, 412, 410, 413, 410, 412, 32, 411, 31, 35, 411, 32, 414, 411, 35, 37, 414, 35, 39, 414, 37, 41, 414, 39, 43, 414, 41, 45, 414, 43, 415, 414, 45, 46, 415, 45, 48, 415, 46, 50, 415, 48, 52, 415, 50, 54, 415, 52, 57, 415, 54, 416, 418, 417, 419, 417, 418, 420, 419, 418, 421, 420, 418, 422, 424, 423, 424, 87, 423, 87, 424, 425, 424, 426, 425, 425, 426, 427, 428, 427, 426, 89, 87, 425, 92, 89, 425, 429, 92, 425, 94, 92, 429, 96, 94, 429, 98, 96, 429, 100, 98, 429, 101, 100, 429, 430, 101, 429, 103, 101, 430, 105, 103, 430, 107, 105, 430, 109, 107, 430, 111, 109, 430, 114, 111, 430, 142, 431, 116, 432, 116, 431, 117, 116, 432, 120, 117, 432, 122, 120, 432, 433, 122, 432, 124, 122, 433, 126, 124, 433, 128, 126, 433, 129, 128, 433, 131, 129, 433, 133, 131, 433, 135, 133, 433, 137, 135, 433, 434, 137, 433, 139, 137, 434, 423, 139, 434, 87, 139, 423, 435, 437, 436, 438, 436, 437, 439, 441, 440, 442, 440, 441, 443, 442, 441, 444, 442, 443, 445, 447, 446, 448, 446, 447, 449, 451, 450, 452, 450, 451, 453, 455, 454, 456, 454, 455, 457, 82, 458, 81, 458, 82, 459, 461, 460, 462, 460, 461, 463, 465, 464, 466, 464, 465, 467, 469, 468, 470, 468, 469, 471, 473, 472, 474, 472, 473, 475, 477, 476, 478, 476, 477, 479, 481, 480, 482, 480, 481, 483, 485, 484, 486, 484, 485, 487, 489, 488, 490, 488, 489, 491, 493, 492, 494, 492, 493, 433, 428, 422, 424, 422, 428, 426, 424, 428, 495, 496, 399, 401, 399, 496, 405, 408, 413, 409, 413, 408, 410, 413, 409, 446, 448, 497, 498, 497, 448, 499, 500, 445, 447, 445, 500, 454, 456, 457, 501, 457, 456, 458, 502, 453, 455, 453, 502, 503, 505, 504, 506, 504, 505, 507, 509, 508, 510, 508, 509]
    float3[] primvars:normals
        interpolation = "faceVarying"
    )
    uniform token subdivisionScheme = "none"
    uniform token subsetFamily:materialBind:familyType = "partition"
    matrix4d xformOp:transform = ( (39.3701, 0, 0, 0), (0, 39.3701, -0.00000297236, 0), (0, 0.00000297236, 39.3701, 0), (0, 0, 0, 1) )
    uniform token[] xformOpOrder = ["xformOp:transform"]

    def GeomSubset "_4_frontLightMax" (
        customData = {
            dictionary "3dsmax" = {
                int matId = 4
            }
        }
    )
    {
        uniform token elementType = "face"
        uniform token familyName = "materialBind"
        int[] indices = [403, 404, 405, 406]
        rel material:binding = </Materials/frontLightMax>
    }

    def GeomSubset "_5_backLightMax" (
        customData = {
            dictionary "3dsmax" = {
                int matId = 5
            }
        }
    )
    {
        uniform token elementType = "face"
        uniform token familyName = "materialBind"
        int[] indices = [407, 408, 409, 410]
        rel material:binding = </Materials/backLightMax>
    }

    def GeomSubset "_7_redMax" (
        customData = {
            dictionary "3dsmax" = {
                int matId = 7
            }
        }
    )
    {
        uniform token elementType = "face"
        uniform token familyName = "materialBind"
        int[] indices = [279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392]
        rel material:binding = </Materials/redMax>
    }

    def GeomSubset "_8_windowMax" (
        customData = {
            dictionary "3dsmax" = {
                int matId = 8
            }
        }
    )
    {
        uniform token elementType = "face"
        uniform token familyName = "materialBind"
        int[] indices = [393, 394, 395, 396, 397, 398, 399, 400, 401, 402]
        rel material:binding = </Materials/windowMax>
    }

    def GeomSubset "_9_greyLightMax" (
        customData = {
            dictionary "3dsmax" = {
                int matId = 9
            }
        }
    )
    {
        uniform token elementType = "face"
        uniform token familyName = "materialBind"
        int[] indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 411, 412, 413, 414]
        rel material:binding = </Materials/greyLightMax>
    }
}

def "Materials"
{
    def Material "frontLightMax"
    {
        token inputs:frame:map1 = "map1"
        token outputs:surface.connect = </Materials/frontLightMax/UsdPreviewSurface.outputs:surface>

        def Shader "UsdPreviewSurface"
        {
            uniform token info:id = "UsdPreviewSurface"
            float inputs:clearcoat = 0
            float inputs:clearcoatRoughness = 0
            color3f inputs:diffuseColor.connect = </Materials/Map__4.outputs:rgb>
            color3f inputs:emissiveColor = (0, 0, 0)
            float inputs:ior = 1.52
            float inputs:metallic = 0
            float inputs:opacity = 1
            float inputs:roughness = 0
            token outputs:surface
        }
    }

    def Shader "Map__4"
    {
        uniform token info:id = "UsdUVTexture"
        asset inputs:file = @..\..\..\textures\global-textures\frontlight.jpg@
        float2 inputs:st.connect = </Materials/Map__4/TextureTransform_map1.outputs:result>
        token inputs:wrapS = "repeat"
        token inputs:wrapT = "repeat"
        float3 outputs:rgb

        def Shader "PrimvarReader_map1"
        {
            uniform token info:id = "UsdPrimvarReader_float2"
            token inputs:varname.connect = </Materials/frontLightMax.inputs:frame:map1>
            float2 outputs:result
        }

        def Shader "TextureTransform_map1"
        {
            uniform token info:id = "UsdTransform2d"
            float2 inputs:in.connect = </Materials/Map__4/PrimvarReader_map1.outputs:result>
            float inputs:rotation = 0
            float2 inputs:scale = (1, 1)
            float2 inputs:translation = (0, 0)
            float2 outputs:result
        }
    }

    def Material "backLightMax"
    {
        token inputs:frame:map1 = "map1"
        token outputs:surface.connect = </Materials/backLightMax/UsdPreviewSurface.outputs:surface>

        def Shader "UsdPreviewSurface"
        {
            uniform token info:id = "UsdPreviewSurface"
            float inputs:clearcoat = 0
            float inputs:clearcoatRoughness = 0
            color3f inputs:diffuseColor.connect = </Materials/Map__5.outputs:rgb>
            color3f inputs:emissiveColor = (0, 0, 0)
            float inputs:ior = 1.52
            float inputs:metallic = 0
            float inputs:opacity = 1
            float inputs:roughness = 0
            token outputs:surface
        }
    }

    def Shader "Map__5"
    {
        uniform token info:id = "UsdUVTexture"
        asset inputs:file = @..\..\..\textures\global-textures\backlight.jpg@
        float2 inputs:st.connect = </Materials/Map__5/TextureTransform_map1.outputs:result>
        token inputs:wrapS = "repeat"
        token inputs:wrapT = "repeat"
        float3 outputs:rgb

        def Shader "PrimvarReader_map1"
        {
            uniform token info:id = "UsdPrimvarReader_float2"
            token inputs:varname.connect = </Materials/backLightMax.inputs:frame:map1>
            float2 outputs:result
        }

        def Shader "TextureTransform_map1"
        {
            uniform token info:id = "UsdTransform2d"
            float2 inputs:in.connect = </Materials/Map__5/PrimvarReader_map1.outputs:result>
            float inputs:rotation = 0
            float2 inputs:scale = (1, 1)
            float2 inputs:translation = (0, 0)
            float2 outputs:result
        }
    }

    def Material "redMax"
    {
        token inputs:frame:map1 = "map1"
        token outputs:surface.connect = </Materials/redMax/UsdPreviewSurface.outputs:surface>

        def Shader "UsdPreviewSurface"
        {
            uniform token info:id = "UsdPreviewSurface"
            float inputs:clearcoat = 0
            float inputs:clearcoatRoughness = 0
            color3f inputs:diffuseColor.connect = </Materials/Map__6.outputs:rgb>
            color3f inputs:emissiveColor = (0, 0, 0)
            float inputs:ior = 1.52
            float inputs:metallic = 0
            float inputs:opacity = 1
            float inputs:roughness = 0
            token outputs:surface
        }
    }

    def Shader "Map__6"
    {
        uniform token info:id = "UsdUVTexture"
        asset inputs:file = @..\..\..\textures\global-colors\red.jpg@
        float2 inputs:st.connect = </Materials/Map__6/TextureTransform_map1.outputs:result>
        token inputs:wrapS = "repeat"
        token inputs:wrapT = "repeat"
        float3 outputs:rgb

        def Shader "PrimvarReader_map1"
        {
            uniform token info:id = "UsdPrimvarReader_float2"
            token inputs:varname.connect = </Materials/redMax.inputs:frame:map1>
            float2 outputs:result
        }

        def Shader "TextureTransform_map1"
        {
            uniform token info:id = "UsdTransform2d"
            float2 inputs:in.connect = </Materials/Map__6/PrimvarReader_map1.outputs:result>
            float inputs:rotation = 0
            float2 inputs:scale = (1, 1)
            float2 inputs:translation = (0, 0)
            float2 outputs:result
        }
    }

    def Material "windowMax"
    {
        token inputs:frame:map1 = "map1"
        token outputs:surface.connect = </Materials/windowMax/UsdPreviewSurface.outputs:surface>

        def Shader "UsdPreviewSurface"
        {
            uniform token info:id = "UsdPreviewSurface"
            float inputs:clearcoat = 0
            float inputs:clearcoatRoughness = 0
            color3f inputs:diffuseColor.connect = </Materials/Map__7.outputs:rgb>
            color3f inputs:emissiveColor = (0, 0, 0)
            float inputs:ior = 1.52
            float inputs:metallic = 0
            float inputs:opacity = 1
            float inputs:roughness = 0
            token outputs:surface
        }
    }

    def Shader "Map__7"
    {
        uniform token info:id = "UsdUVTexture"
        asset inputs:file = @..\..\..\textures\global-textures\window.jpg@
        float2 inputs:st.connect = </Materials/Map__7/TextureTransform_map1.outputs:result>
        token inputs:wrapS = "repeat"
        token inputs:wrapT = "repeat"
        float3 outputs:rgb

        def Shader "PrimvarReader_map1"
        {
            uniform token info:id = "UsdPrimvarReader_float2"
            token inputs:varname.connect = </Materials/windowMax.inputs:frame:map1>
            float2 outputs:result
        }

        def Shader "TextureTransform_map1"
        {
            uniform token info:id = "UsdTransform2d"
            float2 inputs:in.connect = </Materials/Map__7/PrimvarReader_map1.outputs:result>
            float inputs:rotation = 0
            float2 inputs:scale = (1, 1)
            float2 inputs:translation = (0, 0)
            float2 outputs:result
        }
    }

    def Material "greyLightMax"
    {
        token inputs:frame:map1 = "map1"
        token outputs:surface.connect = </Materials/greyLightMax/UsdPreviewSurface.outputs:surface>

        def Shader "UsdPreviewSurface"
        {
            uniform token info:id = "UsdPreviewSurface"
            float inputs:clearcoat = 0
            float inputs:clearcoatRoughness = 0
            color3f inputs:diffuseColor.connect = </Materials/Map__3.outputs:rgb>
            color3f inputs:emissiveColor = (0, 0, 0)
            float inputs:ior = 1.52
            float inputs:metallic = 0
            float inputs:opacity = 1
            float inputs:roughness = 0
            token outputs:surface
        }
    }

    def Shader "Map__3"
    {
        uniform token info:id = "UsdUVTexture"
        asset inputs:file = @..\..\..\textures\global-colors\greylight.jpg@
        float2 inputs:st.connect = </Materials/Map__3/TextureTransform_map1.outputs:result>
        token inputs:wrapS = "repeat"
        token inputs:wrapT = "repeat"
        float3 outputs:rgb

        def Shader "PrimvarReader_map1"
        {
            uniform token info:id = "UsdPrimvarReader_float2"
            token inputs:varname.connect = </Materials/greyLightMax.inputs:frame:map1>
            float2 outputs:result
        }

        def Shader "TextureTransform_map1"
        {
            uniform token info:id = "UsdTransform2d"
            float2 inputs:in.connect = </Materials/Map__3/PrimvarReader_map1.outputs:result>
            float inputs:rotation = 0
            float2 inputs:scale = (1, 1)
            float2 inputs:translation = (0, 0)
            float2 outputs:result
        }
    }
}

