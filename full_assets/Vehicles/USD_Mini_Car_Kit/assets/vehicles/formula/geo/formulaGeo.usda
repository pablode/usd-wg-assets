#usda 1.0
(
    customLayerData = {
        string creator = "USD for Autodesk 3ds Max: v0.2.0.41 Beta"
    }
    defaultPrim = "formula"
    metersPerUnit = 0.0254
    upAxis = "Y"
)

def Mesh "formula"
{
    float3[] extent = [(-3.0750003, 5.9604645e-7, -6.329685), (3.0750003, 3.6149597, 6.329685)]
    int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
    int[] faceVertexIndices = [0, 18, 1, 98, 1, 18, 2, 22, 3, 26, 3, 22, 4, 8, 5, 24, 5, 8, 16, 15, 19, 97, 19, 15, 74, 65, 135, 4, 135, 65, 65, 6, 4, 6, 77, 4, 77, 120, 4, 120, 123, 4, 120, 119, 123, 7, 123, 119, 123, 67, 4, 67, 23, 4, 8, 4, 23, 45, 77, 6, 64, 77, 45, 64, 78, 77, 77, 78, 2, 78, 21, 2, 22, 2, 21, 29, 64, 45, 1, 64, 29, 1, 9, 64, 28, 29, 45, 102, 28, 45, 102, 45, 32, 10, 32, 45, 11, 102, 32, 105, 102, 11, 20, 102, 105, 12, 20, 105, 100, 28, 102, 13, 28, 100, 14, 28, 13, 29, 15, 1, 0, 1, 15, 16, 0, 15, 78, 17, 21, 25, 21, 17, 98, 18, 97, 19, 97, 18, 66, 89, 24, 5, 24, 89, 20, 12, 48, 49, 48, 12, 25, 26, 21, 22, 21, 26, 66, 24, 23, 8, 23, 24, 0, 16, 18, 19, 18, 16, 25, 17, 26, 3, 26, 17, 77, 76, 120, 122, 120, 76, 88, 122, 76, 27, 88, 76, 28, 104, 29, 83, 29, 104, 111, 83, 104, 85, 83, 111, 63, 31, 30, 73, 30, 31, 11, 32, 81, 71, 81, 32, 33, 71, 32, 34, 36, 35, 37, 35, 36, 38, 40, 39, 59, 39, 40, 45, 6, 80, 94, 80, 6, 41, 94, 6, 42, 80, 94, 42, 94, 87, 93, 87, 94, 43, 44, 80, 45, 80, 44, 10, 45, 44, 12, 105, 49, 47, 49, 105, 69, 44, 46, 43, 46, 44, 103, 48, 47, 49, 47, 48, 72, 51, 50, 60, 50, 51, 55, 51, 52, 72, 52, 51, 62, 54, 53, 57, 53, 54, 126, 53, 57, 99, 126, 57, 61, 99, 57, 53, 64, 62, 54, 62, 30, 63, 30, 62, 39, 59, 56, 58, 56, 59, 36, 34, 52, 55, 52, 34, 56, 58, 57, 61, 57, 58, 59, 40, 58, 40, 60, 58, 58, 60, 61, 60, 51, 61, 55, 61, 51, 99, 61, 55, 99, 55, 62, 34, 62, 55, 63, 62, 34, 31, 63, 34, 35, 31, 34, 62, 64, 99, 73, 31, 37, 35, 37, 31, 65, 74, 69, 70, 69, 74, 33, 69, 70, 69, 33, 44, 44, 33, 10, 32, 10, 33, 20, 48, 102, 103, 102, 48, 23, 67, 66, 89, 66, 67, 38, 50, 40, 60, 40, 50, 81, 71, 80, 43, 80, 71, 46, 43, 71, 71, 68, 46, 68, 90, 46, 41, 46, 90, 6, 65, 41, 46, 41, 65, 69, 46, 65, 68, 71, 70, 33, 70, 71, 52, 72, 57, 50, 57, 72, 56, 57, 50, 39, 56, 50, 38, 39, 50, 57, 54, 52, 36, 52, 54, 30, 36, 54, 37, 36, 30, 73, 37, 30, 90, 68, 135, 74, 135, 68, 70, 74, 68, 79, 126, 82, 75, 82, 126, 82, 76, 17, 3, 17, 76, 2, 3, 76, 77, 2, 76, 17, 78, 82, 78, 64, 82, 79, 82, 64, 42, 95, 80, 86, 80, 95, 81, 80, 86, 82, 75, 76, 75, 83, 76, 83, 84, 76, 84, 128, 76, 128, 91, 76, 76, 91, 27, 91, 131, 27, 131, 132, 27, 115, 27, 132, 127, 91, 128, 85, 84, 83, 95, 84, 85, 134, 95, 85, 116, 134, 85, 110, 116, 85, 134, 86, 95, 92, 96, 93, 87, 93, 96, 131, 91, 130, 91, 124, 130, 124, 122, 130, 88, 130, 122, 90, 124, 91, 89, 124, 90, 123, 124, 89, 5, 89, 90, 90, 135, 5, 4, 5, 135, 89, 67, 123, 90, 91, 41, 127, 41, 91, 94, 41, 127, 92, 93, 127, 94, 127, 93, 95, 42, 96, 87, 96, 42, 15, 29, 97, 29, 83, 97, 97, 83, 98, 83, 75, 98, 98, 75, 1, 1, 75, 99, 126, 99, 75, 100, 102, 101, 102, 103, 101, 103, 81, 101, 81, 86, 101, 86, 134, 101, 134, 133, 101, 101, 133, 104, 111, 104, 133, 47, 81, 103, 11, 81, 47, 105, 11, 47, 109, 107, 106, 108, 106, 107, 109, 106, 111, 85, 111, 106, 110, 85, 106, 133, 107, 111, 109, 111, 107, 113, 114, 129, 112, 129, 114, 88, 27, 113, 114, 113, 27, 115, 114, 27, 129, 130, 113, 88, 113, 130, 110, 106, 116, 108, 116, 106, 114, 115, 112, 132, 112, 115, 14, 13, 118, 117, 118, 13, 14, 118, 28, 104, 28, 118, 13, 100, 117, 101, 117, 100, 104, 118, 101, 117, 101, 118, 121, 125, 119, 7, 119, 125, 120, 122, 119, 121, 119, 122, 121, 122, 125, 124, 125, 122, 123, 7, 124, 125, 124, 7, 95, 96, 84, 92, 127, 128, 92, 128, 96, 84, 96, 128, 129, 112, 130, 131, 130, 112, 132, 131, 112, 133, 134, 107, 108, 107, 134, 116, 108, 134]
    point3f[] points = [(-2.1749997, 0.4462223, -3.129685), (-0.5, 0.4462223, -3.129685), (0.5, 0.4462223, -2.610948), (0.5, 1.1649595, -2.610948), (1.8500001, 0.4462223, 4.039055), (1.8500001, 1.1649595, 4.039055), (1.3500001, 0.4462223, 5.329685), (2.5500002, 0.4462223, 1.9796829), (2.1750002, 0.4462223, 4.039055), (-0.49999976, 0.4462223, -4.8982673), (-1.3499999, 0.4462223, 6.329685), (-1.8499999, 0.4462223, 5.329685), (-2.1749997, 0.4462223, 4.039055), (-2.5499997, 0.4462223, 1.9796829), (-2.5499997, 0.4462223, -0.8203163), (-0.5, 0.4462223, -2.610948), (-2.1749997, 0.4462223, -2.610948), (0.5, 1.1649595, -3.129685), (-2.1749997, 1.1649595, -3.129685), (-2.1749997, 1.1649595, -2.610948), (-2.1749997, 0.4462223, 3.5203152), (2.1750002, 0.4462223, -3.129685), (2.1750002, 0.4462223, -2.610948), (2.1750002, 0.4462223, 3.5203152), (2.1750002, 1.1649595, 4.039055), (2.1750002, 1.1649595, -3.129685), (2.1750002, 1.1649595, -2.610948), (1.8500001, 2.3649597, -0.8203163), (-1.8499999, 0.4462223, -0.8203163), (-0.5, 0.4462223, -1.615632), (2.0750003, 1.0462226, -6.329685), (1.5750003, 1.0462226, -4.8982673), (-1.8499999, 0.4462223, 6.329685), (-1.8499999, 3.6149597, 6.329685), (3.0750003, 1.4462227, -4.8982673), (1.5750003, 1.4462227, -4.8982673), (2.8250003, 1.4462227, -6.329685), (1.3250003, 1.4462227, -6.329685), (-1.3250003, 1.4462227, -6.329685), (-1.3250003, 1.0462226, -6.329685), (-1.5750003, 1.4462227, -4.8982673), (1.3500003, 1.3649596, 5.329685), (-0.25, 1.3649597, 5.329685), (-1.3499999, 2.8649597, 5.329685), (-1.3499999, 3.1149597, 6.329685), (-1.3499999, 0.4462223, 5.329685), (1.3500001, 2.8649597, 5.329685), (-1.8499999, 1.1649595, 4.039055), (-2.1749997, 1.1649595, 3.5203152), (-2.1749997, 1.1649595, 4.039055), (-2.8250003, 1.4462227, -6.329685), (-3.0750003, 5.9604645e-7, -4.8982673), (2.8250003, 5.9604645e-7, -6.329685), (0.50000024, 0.4462223, -5.829685), (2.0750003, 0.4462223, -6.329685), (3.0750003, 5.9604645e-7, -4.8982673), (-2.0750003, 1.0462226, -6.329685), (-2.0750003, 0.4462223, -6.329685), (-2.0750003, 1.0462226, -4.8982673), (-1.5750003, 1.0462226, -4.8982673), (-3.0750003, 1.4462227, -4.8982673), (-2.0750003, 0.4462223, -4.8982673), (2.0750003, 0.4462223, -4.8982673), (2.0750003, 1.0462226, -4.8982673), (0.50000024, 0.4462223, -4.8982673), (1.3500001, 0.4462223, 6.329685), (2.1750002, 1.1649595, 3.5203152), (1.8500001, 0.4462223, 3.5203152), (1.8500001, 3.3649597, 5.329685), (1.3500001, 3.1149597, 6.329685), (1.8500001, 3.6149597, 6.329685), (-1.8499999, 3.3649597, 5.329685), (-2.8250003, 5.9604645e-7, -6.329685), (1.3250003, 1.0462226, -6.329685), (1.8500001, 0.4462223, 6.329685), (-0.5, 2.3649597, -3.3296852), (0.5, 2.3649597, -1.615632), (0.5, 0.4462223, -1.615632), (0.5, 0.4462223, -3.129685), (0.5, 0.4462223, -5.829685), (-1.3499999, 1.3649596, 5.329685), (-1.8499999, 1.3649597, 5.329685), (0.5, 2.3649597, -3.3296852), (-0.5, 2.3649597, -1.615632), (-0.59999967, 2.3649597, -0.8203163), (-1.8499999, 2.3649597, -0.8203163), (-1.8499999, 2.3649597, 0.99999905), (-0.25, 2.1149597, 5.329685), (1.8500003, 1.7649596, -0.8203163), (1.8500001, 1.1649595, 3.5203152), (1.8500003, 1.3649596, 5.329685), (1.8500001, 2.3649597, 0.99999905), (0.8000002, 3.6149597, 0.99999857), (0.25, 2.1149597, 5.329685), (0.25, 1.3649597, 5.329685), (-0.7999997, 2.3649597, 0.99999857), (-0.7999997, 3.6149597, 0.99999857), (-0.5, 1.1649595, -2.610948), (-0.5, 1.1649595, -3.129685), (-0.5, 0.4462223, -4.8982673), (-1.8499999, 0.4462223, 1.9796829), (-1.8499999, 1.0462226, 1.9796829), (-1.8499999, 0.4462223, 3.5203152), (-1.8499999, 1.1649595, 3.5203152), (-1.8499999, 1.0462226, -0.8203163), (-1.8499999, 0.4462223, 4.039055), (-2.5499997, 2.0649595, -0.8203163), (-2.5499997, 1.7649597, -0.42031574), (-2.5499997, 2.0649595, -0.42031574), (-2.5499997, 1.7649597, -0.8203163), (-2.2499995, 2.3649597, -0.8203163), (-1.8499999, 1.7649596, -0.8203163), (2.5500002, 2.0649595, -0.42031574), (2.5500002, 1.7649597, -0.8203163), (2.5500002, 2.0649595, -0.8203163), (2.2500002, 2.3649597, -0.8203163), (-2.2499995, 2.3649597, -0.42031574), (-2.5499997, 1.0462226, 1.9796829), (-2.5499997, 1.0462226, -0.8203163), (2.5500002, 0.4462223, -0.8203163), (1.8500001, 0.4462223, -0.8203163), (2.5500002, 1.0462226, -0.8203163), (1.8500003, 1.0462226, -0.8203163), (1.8500001, 0.4462223, 1.9796829), (1.8500001, 1.0462226, 1.9796829), (2.5500002, 1.0462226, 1.9796829), (-0.49999976, 0.4462223, -5.829685), (0.8000002, 2.3649597, 0.99999857), (0.6000004, 2.3649597, -0.8203163), (2.5500002, 1.7649597, -0.42031574), (1.8500001, 1.7649597, -0.42031574), (1.8500001, 2.3649597, -0.42031574), (2.2500002, 2.3649597, -0.42031574), (-1.8499999, 1.7649597, -0.42031574), (-1.8499999, 2.3649597, -0.42031574), (1.8500001, 0.4462223, 5.329685)]
    color3f[] primvars:displayColor = [(0.8, 0.8, 0.8)]
    texCoord2f[] primvars:map1 = [(20.66929, 1.756778), (14.0748, 1.756778), (20.66929, 4.586452), (14.0748, 4.586452), (-10.1378, 1.756778), (-10.1378, 4.586452), (-3.543307, 1.756778), (-3.543307, 4.586452), (-4.822834, 1.756778), (-4.822834, 4.586452), (-3.543307, 1.756778), (-3.543307, 4.586452), (-20.66929, 1.756778), (-20.66929, 4.586452), (-14.0748, 1.756778), (-14.0748, 4.586452), (-4.822834, 49.84003), (-4.822834, 45.90303), (-6.791338, 49.84003), (-4.822834, 40.8218), (-6.791338, 45.90303), (-10.1378, 18.55926), (-4.822834, 21.69043), (-4.822834, 32.71405), (-2.066929, 21.69043), (-2.066929, 32.71405), (-4.822834, 38.77953), (-3.543307, 38.77953), (-3.543307, 40.8218), (-17.42126, 45.90303), (-10.1378, 5.635504), (-10.1378, 12.59842), (-10.1378, 14.6407), (-3.543307, 12.59842), (-3.543307, 14.6407), (-14.0748, 18.55926), (-14.0748, 12.59842), (-14.0748, 5.635504), (-19.38976, 21.69043), (-19.38976, 38.77953), (-19.38976, 49.84003), (-17.42126, 49.84003), (-19.38976, 45.90303), (-19.38976, 40.8218), (-20.66929, 38.77953), (-20.66929, 40.8218), (-19.38976, 32.71405), (-22.14567, 32.71405), (-22.14567, 21.69043), (-14.0748, 14.6407), (-20.66929, 12.59842), (-20.66929, 14.6407), (10.1378, 1.756778), (3.543307, 1.756778), (10.1378, 4.586452), (3.543307, 4.586452), (14.0748, 12.59842), (14.0748, 14.6407), (20.66929, 12.59842), (20.66929, 14.6407), (3.543307, 38.77953), (3.543307, 40.8218), (4.822834, 38.77953), (4.822834, 40.8218), (38.77953, 1.756778), (38.77953, 4.586452), (40.8218, 1.756778), (40.8218, 4.586452), (-12.59842, 4.586452), (-12.59842, 1.756778), (-14.6407, 4.586452), (-14.6407, 1.756778), (-38.77953, 4.586452), (-38.77953, 1.756778), (-40.8218, 4.586452), (-40.8218, 1.756778), (12.59842, 1.756778), (12.59842, 4.586452), (14.6407, 1.756778), (14.6407, 4.586452), (3.543307, 12.59842), (3.543307, 14.6407), (10.1378, 12.59842), (10.1378, 14.6407), (-0.6857378, 1.756778), (-6.854449, 1.756778), (-0.6857378, 9.310862), (-6.854449, 4.118983), (-6.854449, 6.948657), (-6.854449, 9.310862), (27.71602, 1.756778), (21.54731, 1.756778), (27.71602, 4.118983), (21.54731, 9.310862), (27.71602, 6.948657), (27.71602, 9.310862), (-3.937008, 5.635504), (-3.937008, 0), (-5.905512, 5.635504), (-6.889764, 0), (45.90303, 1.756778), (45.90303, 5.373854), (49.84003, 1.756778), (45.90303, 13.24787), (49.84003, 14.23212), (-1.712671e-15, 5.635504), (5.905512, 5.635504), (0.984252, -2.093849e-15), (6.889764, -2.093849e-15), (-2.980353, 5.693786), (-2.980353, 4.118983), (-8.701163, 5.693786), (-8.701163, 4.118983), (-17.42126, 1.756778), (-17.42126, 5.373854), (-6.791338, 1.756778), (-11.12205, 5.373854), (-6.791338, 5.373854), (-13.09055, 5.373854), (-13.09055, 8.32661), (-11.12205, 8.32661), (-45.90303, 11.27937), (-45.90303, 5.373854), (-49.84003, 12.26362), (-45.90303, 1.756778), (-49.84003, 1.756778), (-20.66929, 1.756778), (-20.66929, 4.586452), (-19.38976, 1.756778), (-19.38976, 4.586452), (-6.791338, 51.3263), (-6.791338, 47.26812), (-17.42126, 51.3263), (-17.42126, 47.26812), (19.38976, 38.77953), (19.38976, 40.8218), (20.66929, 38.77953), (20.66929, 40.8218), (3.996383, 9.735959e-17), (3.996383, 5.693786), (9.717193, 3.650073e-15), (9.717193, 5.693786), (2.717997e-29, 5.635504), (-0.984252, -6.916859e-29), (-24.2126, 5.635504), (-23.22835, 5.684342e-14), (3.937008, 5.635504), (10.1378, 1.968504), (3.937008, 3.19256e-29), (20.27559, 5.684342e-14), (14.0748, 1.968504), (14.0748, 5.635504), (20.27559, 5.635504), (10.1378, 5.635504), (0, 1.756778), (0, 4.118983), (5.635504, 1.756778), (5.635504, 4.118983), (-17.32283, 5.684342e-14), (-20.27559, 5.684342e-14), (-18.30709, 5.635504), (-20.27559, 5.635504), (0.1693383, 5.693786), (0.1693383, 4.262935e-14), (-5.551471, 5.693786), (-5.551471, 2.131307e-14), (-5.684342e-14, 4.118983), (-5.684342e-14, 1.756778), (-5.635504, 4.118983), (-5.635504, 1.756778), (-18.30709, 4.118983), (-20.27559, 4.118983), (-18.30709, 5.693786), (-24.2126, 5.693786), (-20.27559, 1.756778), (-24.2126, 3.552714e-15), (0, 2.131628e-14), (-14.0748, 1.756778), (-3.937008, 1.756778), (0, 5.693786), (-3.937008, 4.118983), (-5.905512, 4.118983), (-5.905512, 5.693786), (-10.1378, 1.756778), (-1.185368, 4.118983), (-1.185368, 5.693786), (4.535441, 4.118983), (4.535441, 5.693786), (-6.791338, 1.756778), (-6.791338, 12.26362), (-4.822834, 1.756778), (-4.822834, 14.23212), (-19.38976, 14.23212), (-17.42126, 12.26362), (-17.42126, 1.756778), (-19.38976, 1.756778), (20.66929, 1.756778), (19.38976, 1.756778), (20.66929, 4.586452), (19.38976, 4.586452), (3.543307, 1.756778), (3.543307, 4.586452), (4.822834, 1.756778), (4.822834, 4.586452), (17.32283, 5.893727e-14), (18.30709, 5.635504), (23.22835, 5.893727e-14), (24.2126, 5.635504), (19.38976, 5.373854), (17.42126, 5.373854), (19.38976, 13.24787), (17.42126, 11.27937), (6.791338, 11.27937), (4.822834, 13.24787), (4.822834, 5.373854), (6.791338, 5.373854), (45.90303, 1.756778), (45.90303, 5.373854), (49.84003, 1.756778), (45.90303, 11.27937), (49.84003, 12.26362), (4.822834, 47.74556), (4.822834, 51.80373), (19.38976, 47.74556), (19.38976, 51.80373), (0.984252, 4.263256e-14), (20.27559, 1.756778), (23.22835, -6.4e-44), (23.22835, 5.693786), (20.27559, 4.118983), (17.32283, 4.118983), (17.32283, 5.693786), (3.937008, 1.756778), (0.984252, 5.693786), (3.937008, 4.118983), (6.889764, 5.693786), (6.889764, 4.118983), (-45.90303, 5.373854), (-45.90303, 1.756778), (-45.90303, 13.24787), (-49.84003, 1.756778), (-49.84003, 14.23212), (10.1378, 2.631199), (10.1378, 15.03843), (14.0748, 2.631199), (14.0748, 15.03843), (-11.81102, 9.310862), (-12.59842, 4.586452), (-18.55926, 9.310862), (-14.6407, 4.586452), (-14.6407, 1.756778), (-18.55926, 1.756778), (-12.59842, 1.756778), (-5.635504, 1.756778), (-1.968504, 1.756778), (-13.09055, -43.51627), (-17.42126, -43.51627), (-15.25591, -26.02152), (-19.38976, -26.02152), (-19.38976, -43.51627), (10.1378, 11.81102), (10.1378, 18.55926), (14.0748, 11.81102), (14.0748, 18.55926), (14.4685, 21.69043), (9.744095, 21.69043), (4.822834, 28.85703), (4.822834, 21.69043), (4.822834, 23.26523), (3.248031, 23.26523), (3.248031, 21.69043), (8.956693, 28.85703), (19.38976, 21.69043), (15.25591, 28.85703), (19.38976, 23.26523), (20.96457, 23.26523), (20.96457, 21.69043), (19.38976, 28.85703), (-8.956693, -22.60805), (-11.12205, -40.64804), (-15.25591, -22.60805), (-13.09055, -40.64804), (-23.26523, 9.310862), (-23.26523, 6.948657), (-28.85703, 9.310862), (-32.71405, 4.118983), (-21.69043, 4.118983), (-21.69043, 6.948657), (-45.90303, 5.373854), (-38.77953, 4.586452), (-32.71405, 1.756778), (-40.8218, 4.586452), (-40.8218, 1.756778), (-38.77953, 1.756778), (-4.822834, -43.51627), (-6.791338, -43.51627), (-4.822834, -26.02152), (-8.956693, -26.02152), (-11.12205, -43.51627), (-29.75568, 14.23212), (-29.75568, 9.310862), (-46.93866, 8.32661), (-46.93866, 5.373854), (26.70447, 9.310862), (26.70447, 14.23212), (43.88745, 5.373854), (43.88745, 8.32661), (14.6407, 1.756778), (14.6407, 4.586452), (18.55926, 1.756778), (18.55926, 9.310862), (12.59842, 4.586452), (11.81102, 9.310862), (12.59842, 1.756778), (5.635504, 1.756778), (1.968504, 1.756778), (32.71405, 1.756778), (32.71405, 4.118983), (38.77953, 1.756778), (38.77953, 4.586452), (28.85703, 9.310862), (23.26523, 9.310862), (23.26523, 6.948657), (21.69043, 4.118983), (21.69043, 6.948657), (40.8218, 4.586452), (40.8218, 1.756778), (21.69043, 6.948657), (21.69043, 8.129759), (23.26523, 6.948657), (23.26523, 8.129759), (22.14567, 6.948657), (19.38976, 6.948657), (22.14567, 8.129759), (19.38976, 9.310862), (20.96457, 9.310862), (-19.38976, 23.26523), (-19.38976, 21.69043), (-22.14567, 23.26523), (-22.14567, 21.69043), (-21.69043, 6.948657), (-23.26523, 6.948657), (-21.69043, 8.129759), (-23.26523, 8.129759), (4.822834, 6.948657), (2.066929, 6.948657), (4.822834, 9.310862), (2.066929, 8.129759), (3.248031, 9.310862), (-2.066929, 23.26523), (-2.066929, 21.69043), (-4.822834, 23.26523), (-4.822834, 21.69043), (21.69043, -8.240415), (23.26523, -8.240415), (21.69043, -9.910746), (23.26523, -9.910746), (-21.69043, 7.210147), (-23.26523, 7.210147), (-21.69043, 8.880478), (-23.26523, 8.880478), (21.69043, 1.756778), (21.69043, 4.118983), (32.71405, 1.756778), (32.71405, 4.118983), (22.14567, 1.756778), (19.38976, 1.756778), (22.14567, 4.118983), (19.38976, 4.118983), (-22.14567, 1.756778), (-22.14567, 4.118983), (-19.38976, 1.756778), (-19.38976, 4.118983), (19.38976, 21.69043), (19.38976, 32.71405), (22.14567, 21.69043), (22.14567, 32.71405), (-21.69043, 4.118983), (-21.69043, 1.756778), (-32.71405, 4.118983), (-32.71405, 1.756778), (4.822834, 1.756778), (2.066929, 1.756778), (4.822834, 4.118983), (2.066929, 4.118983), (2.066929, 21.69043), (2.066929, 32.71405), (4.822834, 21.69043), (4.822834, 32.71405), (-4.822834, 1.756778), (-4.822834, 4.118983), (-2.066929, 1.756778), (-2.066929, 4.118983), (30.35057, 9.310862), (23.14084, 9.310862), (30.35057, 14.23212), (-27.70621, 14.23212), (-20.49649, 9.310862), (-27.70621, 9.310862), (8.956693, 31.84483), (15.25591, 31.84483), (9.744095, 23.15122), (14.4685, 23.15122), (-2.066929, 6.948657), (-4.822834, 6.948657), (-2.066929, 8.129759), (-4.822834, 9.310862), (-3.248031, 9.310862), (-19.38976, 6.948657), (-22.14567, 6.948657), (-19.38976, 9.310862), (-22.14567, 8.129759), (-20.96457, 9.310862)] (
        interpolation = "faceVarying"
    )
    int[] primvars:map1:indices = [0, 2, 1, 3, 1, 2, 4, 6, 5, 7, 5, 6, 8, 10, 9, 11, 9, 10, 12, 14, 13, 15, 13, 14, 16, 18, 17, 19, 17, 18, 18, 20, 19, 20, 21, 19, 21, 22, 19, 22, 23, 19, 22, 24, 23, 25, 23, 24, 23, 26, 19, 26, 27, 19, 28, 19, 27, 29, 21, 20, 30, 21, 29, 30, 31, 21, 21, 31, 32, 31, 33, 32, 34, 32, 33, 35, 30, 29, 36, 30, 35, 36, 37, 30, 38, 35, 29, 39, 38, 29, 39, 29, 40, 41, 40, 29, 42, 39, 40, 43, 39, 42, 44, 39, 43, 45, 44, 43, 46, 38, 39, 47, 38, 46, 48, 38, 47, 35, 49, 36, 50, 36, 49, 51, 50, 49, 52, 54, 53, 55, 53, 54, 56, 58, 57, 59, 57, 58, 60, 62, 61, 63, 61, 62, 64, 66, 65, 67, 65, 66, 68, 70, 69, 71, 69, 70, 72, 74, 73, 75, 73, 74, 76, 78, 77, 79, 77, 78, 80, 82, 81, 83, 81, 82, 84, 86, 85, 87, 85, 86, 88, 87, 86, 89, 88, 86, 90, 92, 91, 93, 91, 92, 94, 93, 92, 95, 93, 94, 96, 98, 97, 99, 97, 98, 100, 102, 101, 103, 101, 102, 104, 103, 102, 105, 107, 106, 108, 106, 107, 109, 111, 110, 112, 110, 111, 113, 115, 114, 116, 114, 115, 117, 116, 115, 118, 114, 116, 118, 116, 119, 120, 119, 116, 121, 123, 122, 124, 122, 123, 125, 124, 123, 126, 128, 127, 129, 127, 128, 130, 132, 131, 133, 131, 132, 134, 136, 135, 137, 135, 136, 138, 140, 139, 141, 139, 140, 142, 144, 143, 145, 143, 144, 146, 148, 147, 149, 147, 148, 150, 147, 149, 151, 150, 149, 152, 151, 149, 147, 153, 146, 154, 156, 155, 157, 155, 156, 158, 160, 159, 161, 159, 160, 162, 164, 163, 165, 163, 164, 166, 168, 167, 169, 167, 168, 170, 172, 171, 172, 173, 171, 171, 173, 174, 173, 175, 174, 176, 174, 175, 177, 174, 176, 177, 176, 178, 179, 178, 176, 180, 178, 179, 181, 180, 179, 182, 181, 179, 178, 183, 177, 184, 186, 185, 187, 185, 186, 188, 190, 189, 191, 189, 190, 192, 189, 191, 189, 192, 193, 193, 192, 194, 195, 194, 192, 196, 198, 197, 199, 197, 198, 200, 202, 201, 203, 201, 202, 204, 206, 205, 207, 205, 206, 208, 210, 209, 211, 209, 210, 212, 211, 210, 210, 213, 212, 213, 214, 212, 215, 212, 214, 216, 218, 217, 219, 217, 218, 220, 219, 218, 221, 223, 222, 224, 222, 223, 225, 227, 226, 228, 226, 227, 229, 226, 228, 230, 229, 228, 231, 230, 228, 226, 232, 225, 233, 225, 232, 234, 233, 232, 235, 233, 234, 236, 235, 234, 237, 239, 238, 240, 238, 239, 241, 240, 239, 242, 244, 243, 245, 243, 244, 246, 248, 247, 249, 247, 248, 250, 249, 248, 251, 250, 248, 247, 252, 246, 252, 253, 246, 254, 246, 253, 255, 257, 256, 258, 256, 257, 259, 256, 258, 260, 262, 261, 262, 263, 261, 263, 264, 261, 264, 265, 261, 265, 266, 261, 261, 266, 267, 266, 268, 267, 268, 269, 267, 270, 267, 269, 271, 266, 265, 272, 264, 263, 273, 264, 272, 274, 273, 272, 275, 274, 272, 276, 275, 272, 274, 277, 273, 278, 280, 279, 281, 279, 280, 282, 284, 283, 284, 285, 283, 285, 286, 283, 287, 283, 286, 288, 285, 284, 289, 285, 288, 290, 285, 289, 291, 289, 288, 288, 238, 291, 292, 291, 238, 289, 293, 290, 294, 296, 295, 297, 295, 296, 298, 295, 297, 299, 301, 300, 302, 300, 301, 303, 305, 304, 306, 304, 305, 307, 309, 308, 309, 310, 308, 308, 310, 311, 310, 312, 311, 311, 312, 313, 313, 312, 314, 315, 314, 312, 316, 318, 317, 318, 319, 317, 319, 101, 317, 101, 320, 317, 320, 321, 317, 321, 322, 317, 317, 322, 323, 324, 323, 322, 325, 101, 319, 100, 101, 325, 326, 100, 325, 327, 329, 328, 330, 328, 329, 331, 333, 332, 334, 332, 333, 335, 334, 333, 336, 338, 337, 339, 337, 338, 340, 342, 341, 343, 341, 342, 344, 346, 345, 347, 345, 346, 348, 347, 346, 349, 351, 350, 352, 350, 351, 353, 355, 354, 356, 354, 355, 357, 359, 358, 360, 358, 359, 361, 363, 362, 364, 362, 363, 365, 367, 366, 368, 366, 367, 369, 371, 370, 372, 370, 371, 373, 375, 374, 376, 374, 375, 377, 379, 378, 380, 378, 379, 381, 383, 382, 384, 382, 383, 385, 387, 386, 388, 386, 387, 389, 391, 390, 392, 390, 391, 393, 395, 394, 396, 398, 397, 399, 401, 400, 402, 400, 401, 403, 405, 404, 406, 404, 405, 407, 406, 405, 408, 410, 409, 411, 409, 410, 412, 411, 410]
    float3[] primvars:normals = [(0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0.5075881, 0, -0.8615999), (0.5075881, 0, -0.8615999), (0.5075881, 0, -0.8615999), (0.5075881, 0, -0.8615999), (0.5075881, 0, -0.8615999), (0.5075881, 0, -0.8615999), (0.5075881, 0, -0.8615999), (0.5075881, 0, -0.8615999), (0.5075881, 0, -0.8615999), (0.5075881, 0, -0.8615999), (0.5075881, 0, -0.8615999), (0.5075881, 0, -0.8615999), (-0.5075881, 0, -0.8615999), (-0.5075881, 0, -0.8615999), (-0.5075881, 0, -0.8615999), (-0.5075881, 0, -0.8615999), (-0.5075881, 0, -0.8615999), (-0.5075881, 0, -0.8615999), (-0.5075881, 0, -0.8615999), (-0.5075881, 0, -0.8615999), (-0.5075881, 0, -0.8615999), (-0.5075881, 0, -0.8615999), (-0.5075881, 0, -0.8615999), (-0.5075881, 0, -0.8615999), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0.9850886, 0, 0.1720477), (0.9850886, 0, 0.1720477), (0.9850886, 0, 0.1720477), (0.9850886, 0, 0.1720477), (0.9850886, 0, 0.1720477), (0.9850886, 0, 0.1720477), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, -0.9701425, 0.2425356), (0, -0.9701425, 0.2425356), (0, -0.9701425, 0.2425356), (0, -0.9701425, 0.2425356), (0, -0.9701425, 0.2425356), (0, -0.9701425, 0.2425356), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (-0.9850886, 0, -0.1720477), (-0.9850886, 0, -0.1720477), (-0.9850886, 0, -0.1720477), (-0.9850886, 0, -0.1720477), (-0.9850886, 0, -0.1720477), (-0.9850886, 0, -0.1720477), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0.9850886, 0, -0.1720477), (0.9850886, 0, -0.1720477), (0.9850886, 0, -0.1720477), (0.9850886, 0, -0.1720477), (0.9850886, 0, -0.1720477), (0.9850886, 0, -0.1720477), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-0.9850886, 0, 0.1720477), (-0.9850886, 0, 0.1720477), (-0.9850886, 0, 0.1720477), (-0.9850886, 0, 0.1720477), (-0.9850886, 0, 0.1720477), (-0.9850886, 0, 0.1720477), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0.9701425, -0.2425356), (0, 0.9701425, -0.2425356), (0, 0.9701425, -0.2425356), (0, 0.9701425, -0.2425356), (0, 0.9701425, -0.2425356), (0, 0.9701425, -0.2425356), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0.7932891, -0.6088453), (0, 0.7932891, -0.6088453), (0, 0.7932891, -0.6088453), (0, 0.7932891, -0.6088453), (0, 0.7932891, -0.6088453), (0, 0.7932891, -0.6088453), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0.9743497, 0.2250394), (0, 0.9743497, 0.2250394), (0, 0.9743497, 0.2250394), (0, 0.9743497, 0.2250394), (0, 0.9743497, 0.2250394), (0, 0.9743497, 0.2250394), (0, 0.9743497, 0.2250394), (0, 0.9743497, 0.2250394), (0, 0.9743497, 0.2250394), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0.9449008, 0.3273567), (0, 0.9449008, 0.3273567), (0, 0.9449008, 0.3273567), (0, 0.9449008, 0.3273567), (0, 0.9449008, 0.3273567), (0, 0.9449008, 0.3273567), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0.9743497, 0.2250394), (0, 0.9743497, 0.2250394), (0, 0.9743497, 0.2250394), (0, 0.9743497, 0.2250394), (0, 0.9743497, 0.2250394), (0, 0.9743497, 0.2250394), (0, 0.9743497, 0.2250394), (0, 0.9743497, 0.2250394), (0, 0.9743497, 0.2250394), (0.9920281, 0, 0.1260174), (0.9920281, 0, 0.1260174), (0.9920281, 0, 0.1260174), (0.9920281, 0, 0.1260174), (0.9920281, 0, 0.1260174), (0.9920281, 0, 0.1260174), (-0.9920281, 0, 0.1260174), (-0.9920281, 0, 0.1260174), (-0.9920281, 0, 0.1260174), (-0.9920281, 0, 0.1260174), (-0.9920281, 0, 0.1260174), (-0.9920281, 0, 0.1260174), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-0.7071068, 0.7071068, 0), (-0.7071068, 0.7071068, 0), (-0.7071068, 0.7071068, 0), (-0.7071068, 0.7071068, 0), (-0.7071068, 0.7071068, 0), (-0.7071068, 0.7071068, 0), (0.7071068, 0.7071068, 0), (0.7071068, 0.7071068, 0), (0.7071068, 0.7071068, 0), (0.7071068, 0.7071068, 0), (0.7071068, 0.7071068, 0), (0.7071068, 0.7071068, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-0.9940183, 0, -0.1092138), (-0.9940183, 0, -0.1092138), (-0.9940183, 0, -0.1092138), (0.9940183, 0, -0.1092138), (0.9940183, 0, -0.1092138), (0.9940183, 0, -0.1092138), (0, 0.824352, -0.5660776), (0, 0.824352, -0.5660776), (0, 0.824352, -0.5660776), (0, 0.824352, -0.5660776), (0, 0.824352, -0.5660776), (0, 0.824352, -0.5660776), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1)] (
        interpolation = "faceVarying"
    )
    uniform token subdivisionScheme = "none"
    uniform token subsetFamily:materialBind:familyType = "partition"
    matrix4d xformOp:transform = ( (39.3701, 0, 0, 0), (0, 39.3701, -0.00000297236, 0), (0, 0.00000297236, 39.3701, 0), (0, 0, 0, 1) )
    uniform token[] xformOpOrder = ["xformOp:transform"]

    def GeomSubset "_1_greyMediumMax" (
        customData = {
            dictionary "3dsmax" = {
                int matId = 1
            }
        }
    )
    {
        uniform token elementType = "face"
        uniform token familyName = "materialBind"
        int[] indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157]
        rel material:binding = </Materials/greyMediumMax>
    }

    def GeomSubset "_2_redMax" (
        customData = {
            dictionary "3dsmax" = {
                int matId = 2
            }
        }
    )
    {
        uniform token elementType = "face"
        uniform token familyName = "materialBind"
        int[] indices = [158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257]
        rel material:binding = </Materials/redMax>
    }

    def GeomSubset "_4_windowMax" (
        customData = {
            dictionary "3dsmax" = {
                int matId = 4
            }
        }
    )
    {
        uniform token elementType = "face"
        uniform token familyName = "materialBind"
        int[] indices = [258, 259, 260, 261]
        rel material:binding = </Materials/windowMax>
    }

    def GeomSubset "_5_greyLightMax" (
        customData = {
            dictionary "3dsmax" = {
                int matId = 5
            }
        }
    )
    {
        uniform token elementType = "face"
        uniform token familyName = "materialBind"
        int[] indices = [262, 263, 264, 265, 266, 267]
        rel material:binding = </Materials/greyLightMax>
    }
}

def "Materials"
{
    def Material "greyMediumMax"
    {
        token inputs:frame:map1 = "map1"
        token outputs:surface.connect = </Materials/greyMediumMax/UsdPreviewSurface.outputs:surface>

        def Shader "UsdPreviewSurface"
        {
            uniform token info:id = "UsdPreviewSurface"
            float inputs:clearcoat = 0
            float inputs:clearcoatRoughness = 0
            color3f inputs:diffuseColor.connect = </Materials/Map__2.outputs:rgb>
            color3f inputs:emissiveColor = (0, 0, 0)
            float inputs:ior = 1.52
            float inputs:metallic = 0
            float inputs:opacity = 1
            float inputs:roughness = 0
            token outputs:surface
        }
    }

    def Shader "Map__2"
    {
        uniform token info:id = "UsdUVTexture"
        asset inputs:file = @../../../../textures/global-colors/greymedium.jpg@
        float2 inputs:st.connect = </Materials/Map__2/TextureTransform_map1.outputs:result>
        token inputs:wrapS = "repeat"
        token inputs:wrapT = "repeat"
        float3 outputs:rgb

        def Shader "PrimvarReader_map1"
        {
            uniform token info:id = "UsdPrimvarReader_float2"
            token inputs:varname.connect = </Materials/greyMediumMax.inputs:frame:map1>
            float2 outputs:result
        }

        def Shader "TextureTransform_map1"
        {
            uniform token info:id = "UsdTransform2d"
            float2 inputs:in.connect = </Materials/Map__2/PrimvarReader_map1.outputs:result>
            float inputs:rotation = 0
            float2 inputs:scale = (1, 1)
            float2 inputs:translation = (0, 0)
            float2 outputs:result
        }
    }

    def Material "redMax"
    {
        token inputs:frame:map1 = "map1"
        token outputs:surface.connect = </Materials/redMax/UsdPreviewSurface.outputs:surface>

        def Shader "UsdPreviewSurface"
        {
            uniform token info:id = "UsdPreviewSurface"
            float inputs:clearcoat = 0
            float inputs:clearcoatRoughness = 0
            color3f inputs:diffuseColor.connect = </Materials/Map__6.outputs:rgb>
            color3f inputs:emissiveColor = (0, 0, 0)
            float inputs:ior = 1.52
            float inputs:metallic = 0
            float inputs:opacity = 1
            float inputs:roughness = 0
            token outputs:surface
        }
    }

    def Shader "Map__6"
    {
        uniform token info:id = "UsdUVTexture"
        asset inputs:file = @../../../../textures/global-colors/red.jpg@
        float2 inputs:st.connect = </Materials/Map__6/TextureTransform_map1.outputs:result>
        token inputs:wrapS = "repeat"
        token inputs:wrapT = "repeat"
        float3 outputs:rgb

        def Shader "PrimvarReader_map1"
        {
            uniform token info:id = "UsdPrimvarReader_float2"
            token inputs:varname.connect = </Materials/redMax.inputs:frame:map1>
            float2 outputs:result
        }

        def Shader "TextureTransform_map1"
        {
            uniform token info:id = "UsdTransform2d"
            float2 inputs:in.connect = </Materials/Map__6/PrimvarReader_map1.outputs:result>
            float inputs:rotation = 0
            float2 inputs:scale = (1, 1)
            float2 inputs:translation = (0, 0)
            float2 outputs:result
        }
    }

    def Material "windowMax"
    {
        token inputs:frame:map1 = "map1"
        token outputs:surface.connect = </Materials/windowMax/UsdPreviewSurface.outputs:surface>

        def Shader "UsdPreviewSurface"
        {
            uniform token info:id = "UsdPreviewSurface"
            float inputs:clearcoat = 0
            float inputs:clearcoatRoughness = 0
            color3f inputs:diffuseColor.connect = </Materials/Map__7.outputs:rgb>
            color3f inputs:emissiveColor = (0, 0, 0)
            float inputs:ior = 1.52
            float inputs:metallic = 0
            float inputs:opacity = 1
            float inputs:roughness = 0
            token outputs:surface
        }
    }

    def Shader "Map__7"
    {
        uniform token info:id = "UsdUVTexture"
        asset inputs:file = @../../../../textures/global-textures/window.jpg@
        float2 inputs:st.connect = </Materials/Map__7/TextureTransform_map1.outputs:result>
        token inputs:wrapS = "repeat"
        token inputs:wrapT = "repeat"
        float3 outputs:rgb

        def Shader "PrimvarReader_map1"
        {
            uniform token info:id = "UsdPrimvarReader_float2"
            token inputs:varname.connect = </Materials/windowMax.inputs:frame:map1>
            float2 outputs:result
        }

        def Shader "TextureTransform_map1"
        {
            uniform token info:id = "UsdTransform2d"
            float2 inputs:in.connect = </Materials/Map__7/PrimvarReader_map1.outputs:result>
            float inputs:rotation = 0
            float2 inputs:scale = (1, 1)
            float2 inputs:translation = (0, 0)
            float2 outputs:result
        }
    }

    def Material "greyLightMax"
    {
        token inputs:frame:map1 = "map1"
        token outputs:surface.connect = </Materials/greyLightMax/UsdPreviewSurface.outputs:surface>

        def Shader "UsdPreviewSurface"
        {
            uniform token info:id = "UsdPreviewSurface"
            float inputs:clearcoat = 0
            float inputs:clearcoatRoughness = 0
            color3f inputs:diffuseColor.connect = </Materials/Map__3.outputs:rgb>
            color3f inputs:emissiveColor = (0, 0, 0)
            float inputs:ior = 1.52
            float inputs:metallic = 0
            float inputs:opacity = 1
            float inputs:roughness = 0
            token outputs:surface
        }
    }

    def Shader "Map__3"
    {
        uniform token info:id = "UsdUVTexture"
        asset inputs:file = @../../../../textures/global-colors/greylight.jpg@
        float2 inputs:st.connect = </Materials/Map__3/TextureTransform_map1.outputs:result>
        token inputs:wrapS = "repeat"
        token inputs:wrapT = "repeat"
        float3 outputs:rgb

        def Shader "PrimvarReader_map1"
        {
            uniform token info:id = "UsdPrimvarReader_float2"
            token inputs:varname.connect = </Materials/greyLightMax.inputs:frame:map1>
            float2 outputs:result
        }

        def Shader "TextureTransform_map1"
        {
            uniform token info:id = "UsdTransform2d"
            float2 inputs:in.connect = </Materials/Map__3/PrimvarReader_map1.outputs:result>
            float inputs:rotation = 0
            float2 inputs:scale = (1, 1)
            float2 inputs:translation = (0, 0)
            float2 outputs:result
        }
    }
}

